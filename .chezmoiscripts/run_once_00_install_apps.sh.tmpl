#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

main() {
    local pwd=$(pwd)
    info "OS Detected: {{ .osid | quote }}"
    info "Execution Dir: $pwd"
    echo ""

    {{ if eq .osid "linux-manjaro" -}}
    arch_setup_chaotic_aur
    {{ end -}}

    install_cargo
    install_metapac

    metapac_sync
}

arch_setup_chaotic_aur() {
    if cat /etc/pacman.conf | grep "chaotic-aur"; then
        warn "Chaotic AUR is already setup."
        return 0
    fi

    info "Setting up Chaotic AUR..."
    sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com >/dev/null 2>&1
    sudo pacman-key --lsign-key 3056513887B78AEB >/dev/null 2>&1
    sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst' --noconfirm >/dev/null 2>&1
    sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst' --noconfirm >/dev/null 2>&1

    echo -e "[chaotic-aur]\nInclude = /etc/pacman.d/chaotic-mirrorlist" | sudo tee -a /etc/pacman.conf

    info "Updating pacman..."
    sudo pacman -Sy
}

install_cargo() {
    if eval "command -v cargo >/dev/null 2>&1"; then
        warn "cargo already installed."
        return 0
    fi

    info "Installing cargo..."
    curl https://sh.rustup.rs -sSf | sh
    . "$HOME/.cargo/env"
    ok "cargo installed."
}

install_metapac() {
    if eval "command -v metapac >/dev/null 2>&1"; then
        warn "metapac already installed."
        return 0
    fi

    info "Installing metapac..."
    cargo install metapac
    ok "metapac installed."
}

metapac_sync() {
    if ! eval "command -v metapac >/dev/null 2>&1"; then
        error "Failed \"metapac sync\"! metapac is not installed."
        return 0
    fi

    info "Syncing packages..."
    metapac s
    ok "Package sync complete."
}

# Output Helpers
info()  { echo "[INFO] $1"; } #gum style --foreground "#9bcefd" --bold "[INFO] $1"; }
warn()  { echo "[WARN] $1"; } #gum style --foreground "#ffd166" --bold "[WARN] $1"; }
error() { echo "[ERROR] $1"; } #gum style --foreground "#e0005a" --bold "[ERROR] $1"; }
ok()    { echo "[OK] $1"; } #gum style --foreground "#829e2e" --bold "[OK] $1"; }

main "$@"